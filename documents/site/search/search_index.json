{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Yummy Game Server Yummy is the multiplayer game engine to make it easier to develop game. Supports websocket communication to give wider range of the platform. Web, Android, Ios, desktop and all modern browser have inbuild websocket support and Yummy can be used almost all platforms. Our main goal of the developing this application is support game developer to make better games. Most of the time developing multiplayer games are more complicated than the single player games and with Yummy some of the difficulties can be solved more easier. Installation Requires Rust Language to build the Yummy. cargo run --release Unit test executions To execute all unit test, need to execute following commands. The second command requires Redis instance. cargo test --all cargo test --all --features stateless Features Custom user metadata Custom rooms Different authentication methods Supports for vertical and horizontal scaling Observability via OpenTelemetry integration Todo list Close inactive connections Dispose inactive rooms Add parameter for OpenTelemetry configuration Room metadata Design document Example projects Friend add/remove/list integration RabbitMQ integration Protocol Buffers or FlatBuffers integration Create Lua scripts for Redis operations Server disconnect detection [Stateless] Support for pre and post API calls Web interface for system control Lua, JS, .NET Core runtimes Client libraries (JS, Python, Rust, Godot, Unity, etc.) Create websocket tester application that control multiple connections Redis integration TLS support Remove room at redis state when no user in the room Remove all unnecessary copy and clone General Unit Test Room integration Multiple server communication Integration test","title":"Home"},{"location":"#yummy-game-server","text":"Yummy is the multiplayer game engine to make it easier to develop game. Supports websocket communication to give wider range of the platform. Web, Android, Ios, desktop and all modern browser have inbuild websocket support and Yummy can be used almost all platforms. Our main goal of the developing this application is support game developer to make better games. Most of the time developing multiplayer games are more complicated than the single player games and with Yummy some of the difficulties can be solved more easier.","title":"Yummy Game Server"},{"location":"#installation","text":"Requires Rust Language to build the Yummy. cargo run --release","title":"Installation"},{"location":"#unit-test-executions","text":"To execute all unit test, need to execute following commands. The second command requires Redis instance. cargo test --all cargo test --all --features stateless","title":"Unit test executions"},{"location":"#features","text":"Custom user metadata Custom rooms Different authentication methods Supports for vertical and horizontal scaling Observability via OpenTelemetry integration","title":"Features"},{"location":"#todo-list","text":"Close inactive connections Dispose inactive rooms Add parameter for OpenTelemetry configuration Room metadata Design document Example projects Friend add/remove/list integration RabbitMQ integration Protocol Buffers or FlatBuffers integration Create Lua scripts for Redis operations Server disconnect detection [Stateless] Support for pre and post API calls Web interface for system control Lua, JS, .NET Core runtimes Client libraries (JS, Python, Rust, Godot, Unity, etc.) Create websocket tester application that control multiple connections Redis integration TLS support Remove room at redis state when no user in the room Remove all unnecessary copy and clone","title":"Todo list"},{"location":"#general-unit-test","text":"Room integration Multiple server communication Integration test","title":"General Unit Test"},{"location":"code-coverage/","text":"Code coverage requires additional setup and has been tested on Os X system only. So there is no guarantee that it will work on linux or windows systems. grcov is used to do coverage and need to install. RUSTFLAGS = '-Cinstrument-coverage' LLVM_PROFILE_FILE = 'cargo-test-%p-%m.profraw' cargo test --all grcov . \\ --binary-path ./target/debug/deps/ \\ -s . \\ -t html \\ --ignore-not-existing \\ --ignore '../*' \\ --ignore \"/*\" \\ --ignore server/src/main.rs \\ --ignore server/src/api/websocket/client.rs \\ --ignore \"*test.rs\" \\ --ignore \"*tests.rs\" \\ -o html find . -name \"*.profraw\" -type f -delete After executing commands, it will generate html folder and that include code coverage results. The current results shows that code coverage is more than 85% .","title":"Code coverage"},{"location":"env-variables/","text":"Environment variables Yummy has multiple configuration over environtment variable. Those configurations can be passed via environtment or via config file. The config file must be located near the executable. Profile File name Production prod.env Development dev.env Test test.env Parameters SERVER_NAME The system generates a random name at the startup. The name will start with YUMMY and continue with 7 alphanumeric characters. This name will be used to communicate between Yummy instances and shorter names can improve performance. Example names: YUMMY-wvO8T0u, YUMMY-NTXBzdo, YUMMY-oSArCvq. Default : Server name randomly generated. BIND_IP Instance's binding ip address. Default : 0.0.0.0 BIND_PORT Instance's binding port address. Default : 9090 TLS_CERT_PATH TLS certificates cert file path. Default : TLS_KEY_PATH TLS certificates key file path. Default : RUST_LOG Rust Programming Language's and Actix Framework's logging configuration. Rust logging information Default : debug,backend,actix_web=debug HEARTBEAT_INTERVAL Heartbeat message sent interval. This parameter is in seconds . Default : 10 HEARTBEAT_TIMEOUT Maximum wait time after receiving the last heartbeat message. The connection termination procedure will be started if the system cannot receive a heartbeat message in time. This parameter is in seconds . Default : 20 CONNECTION_RESTORE_WAIT_TIMEOUT If the client disconnected from the instance, the system wait some amound of time to informatim other users and update clients states. This time starts at after user disconnect from the instance or hit to HEARTBEAT_TIMEOUT . This parameter is in seconds . Default : 10 TOKEN_LIFETIME JWT lifetime. That parameter used for session and connection restoration. This parameter is in milliseconds . Default : 86400 API_KEY_NAME Websocket's HTTP GET parameter name. Default : x-yummy-api SALT_KEY Secret key for JWT. Default : YUMMY-SALT MAX_USER_META Maximum allowed meta informations per users. Default : 10 ROOM_PASSWORD_CHARSET Automatic generated room password's charset. Default : ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 ROOM_PASSWORD_LENGTH Automatic generated room password's length. Default : 4 DATABASE_PATH Sqlite database path. Default : yummy.db REDIS_URL Redis connection information. Default : redis://127.0.0.1/ REDIS_PREFIX Prefix for all Redis keys. Default :","title":"Environtment variables"},{"location":"env-variables/#environment-variables","text":"Yummy has multiple configuration over environtment variable. Those configurations can be passed via environtment or via config file. The config file must be located near the executable. Profile File name Production prod.env Development dev.env Test test.env","title":"Environment variables"},{"location":"env-variables/#parameters","text":"","title":"Parameters"},{"location":"env-variables/#server_name","text":"The system generates a random name at the startup. The name will start with YUMMY and continue with 7 alphanumeric characters. This name will be used to communicate between Yummy instances and shorter names can improve performance. Example names: YUMMY-wvO8T0u, YUMMY-NTXBzdo, YUMMY-oSArCvq. Default : Server name randomly generated.","title":"SERVER_NAME "},{"location":"env-variables/#bind_ip","text":"Instance's binding ip address. Default : 0.0.0.0","title":"BIND_IP "},{"location":"env-variables/#bind_port","text":"Instance's binding port address. Default : 9090","title":"BIND_PORT "},{"location":"env-variables/#tls_cert_path","text":"TLS certificates cert file path. Default :","title":"TLS_CERT_PATH "},{"location":"env-variables/#tls_key_path","text":"TLS certificates key file path. Default :","title":"TLS_KEY_PATH "},{"location":"env-variables/#rust_log","text":"Rust Programming Language's and Actix Framework's logging configuration. Rust logging information Default : debug,backend,actix_web=debug","title":"RUST_LOG "},{"location":"env-variables/#heartbeat_interval","text":"Heartbeat message sent interval. This parameter is in seconds . Default : 10","title":"HEARTBEAT_INTERVAL "},{"location":"env-variables/#heartbeat_timeout","text":"Maximum wait time after receiving the last heartbeat message. The connection termination procedure will be started if the system cannot receive a heartbeat message in time. This parameter is in seconds . Default : 20","title":"HEARTBEAT_TIMEOUT "},{"location":"env-variables/#connection_restore_wait_timeout","text":"If the client disconnected from the instance, the system wait some amound of time to informatim other users and update clients states. This time starts at after user disconnect from the instance or hit to HEARTBEAT_TIMEOUT . This parameter is in seconds . Default : 10","title":"CONNECTION_RESTORE_WAIT_TIMEOUT "},{"location":"env-variables/#token_lifetime","text":"JWT lifetime. That parameter used for session and connection restoration. This parameter is in milliseconds . Default : 86400","title":"TOKEN_LIFETIME "},{"location":"env-variables/#api_key_name","text":"Websocket's HTTP GET parameter name. Default : x-yummy-api","title":"API_KEY_NAME "},{"location":"env-variables/#salt_key","text":"Secret key for JWT. Default : YUMMY-SALT","title":"SALT_KEY "},{"location":"env-variables/#max_user_meta","text":"Maximum allowed meta informations per users. Default : 10","title":"MAX_USER_META "},{"location":"env-variables/#room_password_charset","text":"Automatic generated room password's charset. Default : ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789","title":"ROOM_PASSWORD_CHARSET "},{"location":"env-variables/#room_password_length","text":"Automatic generated room password's length. Default : 4","title":"ROOM_PASSWORD_LENGTH "},{"location":"env-variables/#database_path","text":"Sqlite database path. Default : yummy.db","title":"DATABASE_PATH "},{"location":"env-variables/#redis_url","text":"Redis connection information. Default : redis://127.0.0.1/","title":"REDIS_URL "},{"location":"env-variables/#redis_prefix","text":"Prefix for all Redis keys. Default :","title":"REDIS_PREFIX "},{"location":"message/auth/","text":"Authentication related messages Authenticate via email Request message Field name Type Required Description Default value type string Y Value must be Auth auth_type string Y Value must be Email email string Y Authentication email address password string Y Authentication password create boolean N If the user is not created yet, create new one false Example request: { \"type\" : \"Auth\" , \"auth_type\" : \"Email\" , \"email\" : \"erhanbaris@gmail.com\" , \"password\" : \"erhan\" , \"create\" : true } Response message Please check Authenticate response message Authenticate via device id Request message Field name Type Required Description type string Y Value must be Auth auth_type string Y Value must be DeviceId id string Y Authentication device id Example request: { \"type\" : \"Auth\" , \"auth_type\" : \"DeviceId\" , \"id\" : \"1234567890\" } Response message Please check Authenticate response message Authenticate via custom id Request message Field name Type Required Description type string Y Value must be Auth auth_type string Y Value must be CustomId id string Y Authentication device id Example request: { \"type\" : \"Auth\" , \"auth_type\" : \"CustomId\" , \"id\" : \"ABV123\" } Response message Please check Authenticate response message Refreshing token Regenerating token with new expire date. Request message Field name Type Required Description type string Y Value must be Auth auth_type string Y Value must be Refresh token string Y Valid Authentication token Example request: { \"type\" : \"Auth\" , \"auth_type\" : \"Refresh\" , \"token\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NzA1Mjg3MTEsInVzZXIiOnsiaWQiOiJiMDhkN2I3OS0xNDA1LTQxZGMtODJhMS02YTg4MjU3OWM3MmEiLCJzZXNzaW9uIjoiM2IxMzdjYWUtZmY1OC00NjY5LTg1YjctOWEyM2NiOGRiYzAxIiwibmFtZSI6bnVsbCwiZW1haWwiOiJlcmhhbmJhcmlzQGdtYWlsLmNvbSJ9fQ.6tLnsjWPRCz0cW00j2nzV-SUk6GwrlYgxe9V_p5mhxU\" } [### Response message Please check Authenticate response message Restoring session The user should be restore token after reconnecting to the system. If timeout exceeded, the session will be terminated and active game and player will be informed. Request message Field name Type Required Description type string Y Value must be Auth auth_type string Y Value must be Restore token string Y Valid Authentication token Example request: { \"type\" : \"Auth\" , \"auth_type\" : \"Restore\" , \"token\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NzA1Mjg3MTEsInVzZXIiOnsiaWQiOiJiMDhkN2I3OS0xNDA1LTQxZGMtODJhMS02YTg4MjU3OWM3MmEiLCJzZXNzaW9uIjoiM2IxMzdjYWUtZmY1OC00NjY5LTg1YjctOWEyM2NiOGRiYzAxIiwibmFtZSI6bnVsbCwiZW1haWwiOiJlcmhhbmJhcmlzQGdtYWlsLmNvbSJ9fQ.6tLnsjWPRCz0cW00j2nzV-SUk6GwrlYgxe9V_p5mhxU\" } Response message Please check Authenticate response message Logout Terminates the current session and active game and player will be informed. Request message Field name Type Required Description type string Y Value must be Auth auth_type string Y Value must be Logout Example request: { \"type\" : \"Auth\" , \"auth_type\" : \"Logout\" } Response message Success Fail Field name Type Required Description status boolean Y Value should be true Example response: { \"status\" : true } Field name Type Required Description status boolean Y Value should be false result string Y Error message Example response: { \"status\" : false , \"result\" : \"User not logged in\" } Authenticate response message All authentication response message structure is the same. Success Fail Field name Type Required Description status boolean Y Value should be true result string Y User's authentication token Example response : { \"status\" : true , \"result\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NzA1Mjg3MTEsInVzZXIiOnsiaWQiOiJiMDhkN2I3OS0xNDA1LTQxZGMtODJhMS02YTg4MjU3OWM3MmEiLCJzZXNzaW9uIjoiM2IxMzdjYWUtZmY1OC00NjY5LTg1YjctOWEyM2NiOGRiYzAxIiwibmFtZSI6bnVsbCwiZW1haWwiOiJlcmhhbmJhcmlzQGdtYWlsLmNvbSJ9fQ.6tLnsjWPRCz0cW00j2nzV-SUk6GwrlYgxe9V_p5mhxU\" } Field name Type Required Description status boolean Y Value should be false result string Y Error message Example response : { \"status\" : false , \"result\" : \"Email and/or password not valid\" }","title":"Authentication"},{"location":"message/auth/#authentication-related-messages","text":"","title":"Authentication related messages"},{"location":"message/auth/#authenticate-via-email","text":"","title":" Authenticate via email"},{"location":"message/auth/#request-message","text":"Field name Type Required Description Default value type string Y Value must be Auth auth_type string Y Value must be Email email string Y Authentication email address password string Y Authentication password create boolean N If the user is not created yet, create new one false Example request: { \"type\" : \"Auth\" , \"auth_type\" : \"Email\" , \"email\" : \"erhanbaris@gmail.com\" , \"password\" : \"erhan\" , \"create\" : true }","title":"Request message"},{"location":"message/auth/#response-message","text":"Please check Authenticate response message","title":"Response message"},{"location":"message/auth/#authenticate-via-device-id","text":"","title":" Authenticate via device id"},{"location":"message/auth/#request-message_1","text":"Field name Type Required Description type string Y Value must be Auth auth_type string Y Value must be DeviceId id string Y Authentication device id Example request: { \"type\" : \"Auth\" , \"auth_type\" : \"DeviceId\" , \"id\" : \"1234567890\" }","title":"Request message"},{"location":"message/auth/#response-message_1","text":"Please check Authenticate response message","title":"Response message"},{"location":"message/auth/#authenticate-via-custom-id","text":"","title":" Authenticate via custom id"},{"location":"message/auth/#request-message_2","text":"Field name Type Required Description type string Y Value must be Auth auth_type string Y Value must be CustomId id string Y Authentication device id Example request: { \"type\" : \"Auth\" , \"auth_type\" : \"CustomId\" , \"id\" : \"ABV123\" }","title":"Request message"},{"location":"message/auth/#response-message_2","text":"Please check Authenticate response message","title":"Response message"},{"location":"message/auth/#refreshing-token","text":"Regenerating token with new expire date.","title":" Refreshing token"},{"location":"message/auth/#request-message_3","text":"Field name Type Required Description type string Y Value must be Auth auth_type string Y Value must be Refresh token string Y Valid Authentication token Example request: { \"type\" : \"Auth\" , \"auth_type\" : \"Refresh\" , \"token\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NzA1Mjg3MTEsInVzZXIiOnsiaWQiOiJiMDhkN2I3OS0xNDA1LTQxZGMtODJhMS02YTg4MjU3OWM3MmEiLCJzZXNzaW9uIjoiM2IxMzdjYWUtZmY1OC00NjY5LTg1YjctOWEyM2NiOGRiYzAxIiwibmFtZSI6bnVsbCwiZW1haWwiOiJlcmhhbmJhcmlzQGdtYWlsLmNvbSJ9fQ.6tLnsjWPRCz0cW00j2nzV-SUk6GwrlYgxe9V_p5mhxU\" } [### Response message Please check Authenticate response message","title":"Request message"},{"location":"message/auth/#restoring-session","text":"The user should be restore token after reconnecting to the system. If timeout exceeded, the session will be terminated and active game and player will be informed.","title":" Restoring session"},{"location":"message/auth/#request-message_4","text":"Field name Type Required Description type string Y Value must be Auth auth_type string Y Value must be Restore token string Y Valid Authentication token Example request: { \"type\" : \"Auth\" , \"auth_type\" : \"Restore\" , \"token\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NzA1Mjg3MTEsInVzZXIiOnsiaWQiOiJiMDhkN2I3OS0xNDA1LTQxZGMtODJhMS02YTg4MjU3OWM3MmEiLCJzZXNzaW9uIjoiM2IxMzdjYWUtZmY1OC00NjY5LTg1YjctOWEyM2NiOGRiYzAxIiwibmFtZSI6bnVsbCwiZW1haWwiOiJlcmhhbmJhcmlzQGdtYWlsLmNvbSJ9fQ.6tLnsjWPRCz0cW00j2nzV-SUk6GwrlYgxe9V_p5mhxU\" }","title":"Request message"},{"location":"message/auth/#response-message_3","text":"Please check Authenticate response message","title":"Response message"},{"location":"message/auth/#logout","text":"Terminates the current session and active game and player will be informed.","title":" Logout"},{"location":"message/auth/#request-message_5","text":"Field name Type Required Description type string Y Value must be Auth auth_type string Y Value must be Logout Example request: { \"type\" : \"Auth\" , \"auth_type\" : \"Logout\" }","title":"Request message"},{"location":"message/auth/#response-message_4","text":"Success Fail Field name Type Required Description status boolean Y Value should be true Example response: { \"status\" : true } Field name Type Required Description status boolean Y Value should be false result string Y Error message Example response: { \"status\" : false , \"result\" : \"User not logged in\" }","title":"Response message"},{"location":"message/auth/#authenticate-response-message","text":"All authentication response message structure is the same. Success Fail Field name Type Required Description status boolean Y Value should be true result string Y User's authentication token Example response : { \"status\" : true , \"result\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NzA1Mjg3MTEsInVzZXIiOnsiaWQiOiJiMDhkN2I3OS0xNDA1LTQxZGMtODJhMS02YTg4MjU3OWM3MmEiLCJzZXNzaW9uIjoiM2IxMzdjYWUtZmY1OC00NjY5LTg1YjctOWEyM2NiOGRiYzAxIiwibmFtZSI6bnVsbCwiZW1haWwiOiJlcmhhbmJhcmlzQGdtYWlsLmNvbSJ9fQ.6tLnsjWPRCz0cW00j2nzV-SUk6GwrlYgxe9V_p5mhxU\" } Field name Type Required Description status boolean Y Value should be false result string Y Error message Example response : { \"status\" : false , \"result\" : \"Email and/or password not valid\" }","title":"Authenticate response message"},{"location":"message/room/","text":"Room related messages Create room Create room Request message Field name Type Required Description Default value disconnect boolean N If user already joined to room, disconnect from it false name string N Room name access_type CreateRoomAccessType N Definition for who can access and see the room Public max_user Number N Maximum number for participants. Use 0 for unlimited participants. 0 Example requests { \"type\" : \"Room\" , \"room_type\" : \"Create\" , \"disconnect\" : true , \"access_type\" : \"Private\" , \"max_user\" : 1 } { \"type\" : \"Room\" , \"room_type\" : \"Create\" , \"tags\" : [ \"test 1\" , \"test 2\" , \"test 3\" ], } Success Response Field name Type Required Description status boolean Y Value should be 'true' result string Y Room ID as uuid { \"status\" : true , \"result\" : \"4077a478-d01f-4c09-9462-c54f7ea0e2a7\" } Fail Response Field name Type Required Description status boolean Y Value should be 'false' result string Y Error message Example response : { \"status\" : false , \"result\" : \"User joined to other room\" } Message objects CreateRoomAccessType Who can access the room. Field name Information Public The room can be searchable by everyone and anyone can join to room. Private The room available only with the key Friend Friends can see and can join to room Except Tag field, all fields names are \"Public\", \"Private\" and \"Friend\".","title":"Room"},{"location":"message/room/#room-related-messages","text":"Create room","title":"Room related messages"},{"location":"message/room/#create-room","text":"","title":"Create room"},{"location":"message/room/#request-message","text":"Field name Type Required Description Default value disconnect boolean N If user already joined to room, disconnect from it false name string N Room name access_type CreateRoomAccessType N Definition for who can access and see the room Public max_user Number N Maximum number for participants. Use 0 for unlimited participants. 0 Example requests { \"type\" : \"Room\" , \"room_type\" : \"Create\" , \"disconnect\" : true , \"access_type\" : \"Private\" , \"max_user\" : 1 } { \"type\" : \"Room\" , \"room_type\" : \"Create\" , \"tags\" : [ \"test 1\" , \"test 2\" , \"test 3\" ], }","title":"Request message"},{"location":"message/room/#success-response","text":"Field name Type Required Description status boolean Y Value should be 'true' result string Y Room ID as uuid { \"status\" : true , \"result\" : \"4077a478-d01f-4c09-9462-c54f7ea0e2a7\" }","title":"Success Response"},{"location":"message/room/#fail-response","text":"Field name Type Required Description status boolean Y Value should be 'false' result string Y Error message Example response : { \"status\" : false , \"result\" : \"User joined to other room\" }","title":"Fail Response"},{"location":"message/room/#message-objects","text":"","title":"Message objects"},{"location":"message/room/#createroomaccesstype","text":"Who can access the room. Field name Information Public The room can be searchable by everyone and anyone can join to room. Private The room available only with the key Friend Friends can see and can join to room Except Tag field, all fields names are \"Public\", \"Private\" and \"Friend\".","title":"CreateRoomAccessType"},{"location":"message/user/","text":"User related messages Get my information Request message Field name Type Required Description type string Y Value must be User user_type string Y Value must be Me Example request: { \"type\" : \"User\" , \"auth_type\" : \"Me\" } Response message Please check User information response Get user's information Request message Field name Type Required Description type string Y Value must be User user_type string Y Value must be Me user string Y User's unique id Example request: { \"type\" : \"User\" , \"auth_type\" : \"Get\" , \"user\" : \"258cd77c-1618-4c44-baff-6ec73c57fa85\" } Response message Please check User information response Information update Update user information. Current implementation only allow to update own informations. Later on the system will have a support to update another user's informations. That is partially implemented but requires more changes and controls. Request message Field name Type Nullable Description type string N Value must be User auth_type string N Value must be Update name string Y email string Y password string Y device_id string Y custom_id string Y type UserType Y meta [UserMeta] Y Array of UserMeta information. This is user based information and have access level to whom see that information. meta_action MetaAction Y Default value is 0 Example request: Update all informations Only password change Only user type change Only user type change { \"type\" : \"User\" , \"user_type\" : \"Update\" , \"name\" : \"erhan\" , \"email\" : \"erhanbaris@gmail.com\" , \"password\" : \"12345\" , \"device_id\" : \"abc123\" , \"custom_id\" : \"1234567890\" , \"type\" : 3 , \"meta\" : { \"lat\" : 123.0 , \"lon\" : 321.0 } } { \"type\" : \"User\" , \"user_type\" : \"Update\" , \"password\" : \"12345\" } { \"type\" : \"User\" , \"user_type\" : \"Update\" , \"type\" : 3 , } { \"type\" : \"User\" , \"user_type\" : \"Update\" , \"type\" : 3 , } Response message Please check User information response User information response Success Fail Field name Type Required Description status boolean Y Value should be true result UserInfoObject Y User's information object Example response : { \"status\" : true , \"result\" : { \"id\" : \"cf20d9d2-e555-4008-886a-451c11dae64c\" , \"name\" : \"erhan\" , \"email\" : \"erhan@erhan.com\" , \"device_id\" : \"ABC123\" , \"custom_id\" : \"1234567890\" , \"meta\" : { \"user type\" : 8.0 , \"lat\" : 3.11133 , \"lon\" : 5.444 , \"me type\" : 9.0 }, \"user_type\" : 1 , \"online\" : true , \"insert_date\" : 1670446270 , \"last_login_date\" : 1670446270 } } Field name Type Required Description status boolean Y Value should be false result string Y Error message Example response : { \"status\" : false , \"result\" : \"Email and/or password not valid\" } Message objects UserInfoObject It keeps the information about the user together. It is object type. Field name Type Nullable Description id string N User's unique id name string Y User's name email string Y Email device_id string Y Device id custom_id string Y Custom id meta UserMeta Y Meta object user_type UserType N User's type information online boolean N insert_date number N last_login_date number N UserType It is the type of authorization at the entire system level of the user. The administrator and moderator levels differ among themselves, and the administrator level is the highest level that can be recognized. Name Value User 1 Mod 2 Admin 3 UserMeta This area is used to store user-based private or public information. Information can be kept dynamically and access to this information can be arranged. However, only certain data types are supported. number, boolean and string types are supported. nested declaration and array are not supported. It must be defined as a key-value. Value part may contain a value or if it is desired to determine the authorization level, it should be defined as an object and authorization information should be given. Access level of all created meta is defined as 0 . When the query is made, meta information that has been assigned a lower authority than the user's authority can also be seen. In other words, if the user has the moderator authority, they can see all the metas with Anonymous , Registered user , Friend , Me and Moderator privileges. If the null is assigned into the key, that key will be removed from user. See the access level table. Examples Single definition Multiple definition Definition with access level Remove meta from user { \"location\" : \"Copenhagen\" } { \"location\" : \"Copenhagen\" , \"age\" : 18 , \"maried\" : true } { \"location\" : { \"access\" : 4 , \"value\" : \"Copenhagen\" }, \"age\" : 18 , \"maried\" : true } { \"location\" : null } User meta access level Value Information 0 Anonymous 1 Registered user 2 Friend 3 Me 4 Moderator 5 Admin 6 System Meta actions It is the choice of algorithm to be used to add or delete new meta. Value Information 0 Only add new item or update 1 Add new item or update then remove unused metas 2 Remove all metas. Note: new meta definitions will be discarded","title":"User"},{"location":"message/user/#user-related-messages","text":"","title":"User related messages"},{"location":"message/user/#get-my-information","text":"","title":" Get my information"},{"location":"message/user/#request-message","text":"Field name Type Required Description type string Y Value must be User user_type string Y Value must be Me Example request: { \"type\" : \"User\" , \"auth_type\" : \"Me\" }","title":"Request message"},{"location":"message/user/#response-message","text":"Please check User information response","title":"Response message"},{"location":"message/user/#get-users-information","text":"","title":" Get user's information"},{"location":"message/user/#request-message_1","text":"Field name Type Required Description type string Y Value must be User user_type string Y Value must be Me user string Y User's unique id Example request: { \"type\" : \"User\" , \"auth_type\" : \"Get\" , \"user\" : \"258cd77c-1618-4c44-baff-6ec73c57fa85\" }","title":"Request message"},{"location":"message/user/#response-message_1","text":"Please check User information response","title":"Response message"},{"location":"message/user/#information-update","text":"Update user information. Current implementation only allow to update own informations. Later on the system will have a support to update another user's informations. That is partially implemented but requires more changes and controls.","title":" Information update"},{"location":"message/user/#request-message_2","text":"Field name Type Nullable Description type string N Value must be User auth_type string N Value must be Update name string Y email string Y password string Y device_id string Y custom_id string Y type UserType Y meta [UserMeta] Y Array of UserMeta information. This is user based information and have access level to whom see that information. meta_action MetaAction Y Default value is 0 Example request: Update all informations Only password change Only user type change Only user type change { \"type\" : \"User\" , \"user_type\" : \"Update\" , \"name\" : \"erhan\" , \"email\" : \"erhanbaris@gmail.com\" , \"password\" : \"12345\" , \"device_id\" : \"abc123\" , \"custom_id\" : \"1234567890\" , \"type\" : 3 , \"meta\" : { \"lat\" : 123.0 , \"lon\" : 321.0 } } { \"type\" : \"User\" , \"user_type\" : \"Update\" , \"password\" : \"12345\" } { \"type\" : \"User\" , \"user_type\" : \"Update\" , \"type\" : 3 , } { \"type\" : \"User\" , \"user_type\" : \"Update\" , \"type\" : 3 , }","title":"Request message"},{"location":"message/user/#response-message_2","text":"Please check User information response","title":"Response message"},{"location":"message/user/#user-information-response","text":"Success Fail Field name Type Required Description status boolean Y Value should be true result UserInfoObject Y User's information object Example response : { \"status\" : true , \"result\" : { \"id\" : \"cf20d9d2-e555-4008-886a-451c11dae64c\" , \"name\" : \"erhan\" , \"email\" : \"erhan@erhan.com\" , \"device_id\" : \"ABC123\" , \"custom_id\" : \"1234567890\" , \"meta\" : { \"user type\" : 8.0 , \"lat\" : 3.11133 , \"lon\" : 5.444 , \"me type\" : 9.0 }, \"user_type\" : 1 , \"online\" : true , \"insert_date\" : 1670446270 , \"last_login_date\" : 1670446270 } } Field name Type Required Description status boolean Y Value should be false result string Y Error message Example response : { \"status\" : false , \"result\" : \"Email and/or password not valid\" }","title":"User information response"},{"location":"message/user/#message-objects","text":"","title":"Message objects"},{"location":"message/user/#userinfoobject","text":"It keeps the information about the user together. It is object type. Field name Type Nullable Description id string N User's unique id name string Y User's name email string Y Email device_id string Y Device id custom_id string Y Custom id meta UserMeta Y Meta object user_type UserType N User's type information online boolean N insert_date number N last_login_date number N","title":"UserInfoObject"},{"location":"message/user/#usertype","text":"It is the type of authorization at the entire system level of the user. The administrator and moderator levels differ among themselves, and the administrator level is the highest level that can be recognized. Name Value User 1 Mod 2 Admin 3","title":"UserType"},{"location":"message/user/#usermeta","text":"This area is used to store user-based private or public information. Information can be kept dynamically and access to this information can be arranged. However, only certain data types are supported. number, boolean and string types are supported. nested declaration and array are not supported. It must be defined as a key-value. Value part may contain a value or if it is desired to determine the authorization level, it should be defined as an object and authorization information should be given. Access level of all created meta is defined as 0 . When the query is made, meta information that has been assigned a lower authority than the user's authority can also be seen. In other words, if the user has the moderator authority, they can see all the metas with Anonymous , Registered user , Friend , Me and Moderator privileges. If the null is assigned into the key, that key will be removed from user. See the access level table. Examples Single definition Multiple definition Definition with access level Remove meta from user { \"location\" : \"Copenhagen\" } { \"location\" : \"Copenhagen\" , \"age\" : 18 , \"maried\" : true } { \"location\" : { \"access\" : 4 , \"value\" : \"Copenhagen\" }, \"age\" : 18 , \"maried\" : true } { \"location\" : null }","title":"UserMeta"},{"location":"message/user/#user-meta-access-level","text":"Value Information 0 Anonymous 1 Registered user 2 Friend 3 Me 4 Moderator 5 Admin 6 System","title":"User meta access level"},{"location":"message/user/#meta-actions","text":"It is the choice of algorithm to be used to add or delete new meta. Value Information 0 Only add new item or update 1 Add new item or update then remove unused metas 2 Remove all metas. Note: new meta definitions will be discarded","title":"Meta actions"}]}