from typing import Optional, Tuple


class AuthModel:
    def get_user_id(self) -> Optional[str]: ...
    def get_session_id(self) -> Optional[str]: ...


class RequestIdModel:
    def get_request_id(self) -> Optional[int]: ...
    def set_request_id(self, request_id: int): ...


class BaseModel(AuthModel, RequestIdModel):
    ...


class DeviceIdAuth(BaseModel):
    def get_device_id(self) -> str: ...
    def set_device_id(self, device_id: str): ...


class EmailAuth(BaseModel):
    def get_email(self) -> str: ...
    def set_email(self, email: str): ...

    def get_password(self) -> str: ...
    def set_password(self, password: str): ...


class CustomIdAuth(BaseModel):
    def get_custom_id(self) -> str: ...
    def set_custom_id(self, custom_id: str): ...


class Logout(BaseModel):
    ...


class UserConnected:
    def get_user_id(self) -> Optional[str]: ...


class UserDisconnected(BaseModel):
    def get_send_message(self) -> bool: ...
    def set_send_message(self, send_message: bool): ...


class RefreshToken(BaseModel):
    ...


class GetUserInformation(BaseModel):
    def get_query_type(self) -> str: ...
    def get_requester_user_id(self) -> Optional[str]: ...
    def get_value(self) -> Tuple[Optional[str], Optional[str]]: ...
